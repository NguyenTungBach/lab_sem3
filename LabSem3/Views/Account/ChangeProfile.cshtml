@model LabSem3.Models.ViewModel.ChangeProfileViewModel

@{
    ViewBag.Title = "ChangeProfile";
}

<h2>ChangeProfile</h2>


@using (Html.BeginForm("ComfirmChangeProfile", "Account"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ChangeProfileViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control text-box single-line" data-val="true" data-val-date="The field Birthday must be a date." data-val-required="Birthday Required" id="Birthday" name="Birthday" type="date" value="@(Model.Birthday != null ? string.Format("{0:yyyy-MM-dd}", Model.Birthday) : "")">
            @*@Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <button type="button" id="upload_widget" class="cloudinary-button mb-3">
                Upload files
            </button>
            <div id="preview-image">
                @if(Model.Thumbnail != null)
                {
                    <div class="col-md-3 col-sm-3 position-relative" style="padding-left: 0 !important;">
                        <img src="@Model.Thumbnail"
                             class="col-md-12 col-sm-12 img-thumbnail mr-2 mb-2 imagesChoice">
                    </div>
                }
            </div>
            <input class="form-control text-box single-line" data-val="true" data-val-required="Thumbnail Required" id="Thumbnail" name="Thumbnail" type="text" value="@Model.Thumbnail">
            @*@Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Profile", "Profile")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var form = document.getElementById('Thumbnail');
        var listImg = document.getElementById('preview-image')
        console.log(listImg)
        console.log(form);
        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'dark-faith',
            uploadPreset: 'nqbsybdh'
        }, (error, result) => {
            if (!error && result && result.event === "success") {
                console.log('Done! Here is the image info: ', result.info);
                //form.value = result.info.secure_url + ',';
                form.value = result.info.secure_url;
                listImg.innerHTML = `
                    <div class="col-md-3 col-sm-3 position-relative" style="padding-left: 0 !important;">
                                        <a id="close_img" class="close-preview" onclick="deleteImage('${result.info.delete_token}','${result.info.secure_url}')">&#10006;</a>
                                        <img src="${result.info.secure_url}"
                                             class="col-md-12 col-sm-12 img-thumbnail mr-2 mb-2 imagesChoice">
                                    </div>
                       `
                // console.log('Done! Here is the image info: ', result.info.url);
                console.log('Done! Here is the image info: ', result.info.secure_url);
            }
        }
        )

        document.getElementById("upload_widget").addEventListener("click", function () {
            myWidget.open();
        }, false);
    });

    $(document).on("click", '#close_img', function () {
        $(this).parent().hide();
    });

    function deleteImage(delete_token, secure_url) {
        var src = secure_url;
        const url = "https://api.cloudinary.com/v1_1/dark-faith/delete_by_token"; // Nếu đổi tài khoản thì nhớ chú ý đổi cái api này
        $.ajax({
            url: url, // gửi ajax đến file result.php
            type: "POST", // chọn phương thức gửi là post
            data: { // Danh sách các thuộc tính sẽ gửi đi
                token: delete_token
            },
            error: function () {
                alert("Có lỗi xảy ra!");
            }
        });
        
        var array_thubmail_before = document.getElementById('Thumbnail').value.split(',');
        array_thubmail_before.pop();
        // const obj = JSON.parse(src);
        // tìm đến những phần tử khác obj.secure_url
        const array_thubmail_after = array_thubmail_before.filter(thumbnail => { return thumbnail !== src });
        if (array_thubmail_after.length > 0) {
            document.getElementById('Thumbnail').value = array_thubmail_after.join(',') + ',';
        } else {
            document.getElementById('Thumbnail').value = "";
        }

        // console.log("Phần tử hiện tại là:", this );
        console.log("Giá trị trong thumbnail là:", document.getElementById('Thumbnail').value);
    }

</script>