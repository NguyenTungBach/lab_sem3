@model LabSem3.Models.ViewModel.ComplaintViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutLabversion002.cshtml";
}

<h2 style="font-weight: bold;">Add New Complaint</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeComplaintId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="" name="TypeComplaintId">
                    @{
                        foreach (var vr in ViewBag.TypeComplaints)
                        {
                            <option value="@vr.Id">@vr.Name</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EquipmentId, htmlAttributes: new { @class = "control-label col-md-2", @value = "" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EquipmentId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EquipmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Detail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                <button type="button" id="upload_widget" class="cloudinary-button mb-3">
                    Upload files
                </button>
                <div id="preview-image" class="row">
                    
                </div>
                <input class="form-control text-box single-line" hidden data-val="true" data-val-required="Thumbnail Required" id="Thumbnail" name="Thumbnail" type="text" value="">
                @*@Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var form = document.getElementById('Thumbnail');
        var listImg = document.getElementById('preview-image')
        console.log(listImg)
        console.log(form);
        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'dark-faith',
            uploadPreset: 'nqbsybdh'
        }, (error, result) => {
            if (!error && result && result.event === "success") {
                console.log('Done! Here is the image info: ', result.info);
                form.value += result.info.secure_url + ',';
                listImg.innerHTML += `
                    <div class="col-md-3 col-sm-3 position-relative" style="padding-left: 0 !important;">
                                        <a id="close_img" class="close-preview" onclick="deleteImage('${result.info.delete_token}','${result.info.secure_url}')">&#10006;</a>
                                        <img src="${result.info.secure_url}"
                                             class="col-md-12 col-sm-12 img-thumbnail mr-2 mb-2 imagesChoice">
                                    </div>
                       `
                // console.log('Done! Here is the image info: ', result.info.url);
                console.log('Done! Here is the image info: ', result.info.secure_url);
            }
        }
        )

        document.getElementById("upload_widget").addEventListener("click", function () {
            myWidget.open();
        }, false);
    });

    $(document).on("click", '#close_img', function () {
        $(this).parent().hide();
    });

    function deleteImage(delete_token, secure_url) {
        var src = secure_url;
        const url = "https://api.cloudinary.com/v1_1/dark-faith/delete_by_token"; // Nếu đổi tài khoản thì nhớ chú ý đổi cái api này
        $.ajax({
            url: url, // gửi ajax đến file result.php
            type: "POST", // chọn phương thức gửi là post
            data: { // Danh sách các thuộc tính sẽ gửi đi
                token: delete_token
            },
            error: function () {
                alert("Có lỗi xảy ra!");
            }
        });

        var array_thubmail_before = document.getElementById('Thumbnail').value.split(',');
        array_thubmail_before.pop();
        // const obj = JSON.parse(src);
        // tìm đến những phần tử khác obj.secure_url
        const array_thubmail_after = array_thubmail_before.filter(thumbnail => { return thumbnail !== src });
        if (array_thubmail_after.length > 0) {
            document.getElementById('Thumbnail').value = array_thubmail_after.join(',') + ',';
        } else {
            document.getElementById('Thumbnail').value = "";
        }

        // console.log("Phần tử hiện tại là:", this );
        console.log("Giá trị trong thumbnail là:", document.getElementById('Thumbnail').value);
    }

</script>
